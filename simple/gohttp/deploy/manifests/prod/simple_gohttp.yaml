apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: gohttp
  name: simple
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gohttp
  name: gohttp
  namespace: simple
spec:
  ports:
  - port: 3000
  selector:
    app: gohttp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/inject: enabled
  labels:
    app: gohttp
  name: gohttp
  namespace: simple
spec:
  replicas: 10
  selector:
    matchLabels:
      app: gohttp
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: gohttp
        namespace: simple
    spec:
      containers:
      - env:
        - name: APP_ENVIRONMENT
          value: prod
        image: registry.digitalocean.com/gitops/gohttp:gohttp-v1.0.4
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 10
        name: gohttp
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "2"
            memory: 128Mi
          requests:
            cpu: 500m
            memory: 16Mi
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: gohttp
  name: gohttp
  namespace: simple
spec:
  maxReplicas: 11
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gohttp
  targetCPUUtilizationPercentage: 50
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    enable-opentracing: "true"
    jaeger-collector-host: opentelemetry-collector.observability
    jaeger-propagation-format: w3c
    jaeger-sampler-param: "0.1"
    jaeger-sampler-type: probabilistic
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  labels:
    app: gohttp
  name: gohttp
  namespace: simple
spec:
  defaultBackend:
    service:
      name: gohttp
      port:
        number: 3000
  rules:
  - host: simple-gohttp.do-gitops.tk
    http:
      paths:
      - backend:
          service:
            name: gohttp
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - simple-gohttp.do-gitops.tk
    secretName: simple-gohttp-do-gitops-tk
