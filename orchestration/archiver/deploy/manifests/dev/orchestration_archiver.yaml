apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: archiver
  name: orchestration
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: archiver
  name: job-reader
  namespace: orchestration
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: archiver
  name: job-reader
  namespace: orchestration
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: job-reader
subjects:
- kind: ServiceAccount
  name: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: archiver
  name: archiver
  namespace: orchestration
spec:
  ports:
  - port: 3000
  selector:
    app: archiver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/inject: enabled
  labels:
    app: archiver
  name: archiver
  namespace: orchestration
spec:
  replicas: 1
  selector:
    matchLabels:
      app: archiver
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: archiver
        namespace: orchestration
    spec:
      containers:
      - env:
        - name: APP_ENVIRONMENT
          value: dev
        image: registry4gitops.localhost:56789/archiver:archiver-v1.1.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 10
        name: archiver
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "2"
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 16Mi
      initContainers:
      - args:
        - job
        - archiver-archiver-v1.1.1-migrations
        - -n orchestration
        image: groundnuty/k8s-wait-for:v1.5.1
        name: wait-for-archiver-migrations
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: archiver
  name: archiver-archiver-v1.1.1-migrations
  namespace: orchestration
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        app: archiver
    spec:
      containers:
      - command:
        - /migrations
        env:
        - name: APP_ENVIRONMENT
          value: dev
        image: registry4gitops.localhost:56789/archiver:archiver-v1.1.1
        name: archiver-migrations
        resources:
          limits:
            cpu: "2"
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 16Mi
      restartPolicy: Never
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: mkcert-cluster-issuer
    jaeger-collector-host: observability-opentelemetry-collector.observability
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-opentracing: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  labels:
    app: archiver
  name: archiver
  namespace: orchestration
spec:
  rules:
  - host: archiver.orchestration.dev
    http:
      paths:
      - backend:
          service:
            name: archiver
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - archiver.orchestration.dev
    secretName: archiver-orchestration-dev
